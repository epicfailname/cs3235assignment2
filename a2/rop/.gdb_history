r
stack 24
r
stack
stack 24
r > dump2
r > dump2
ni
ni
c
start
c
r 
q
start
pdis rop
b * 0x0000000000400806
c
stack 24
r
stack 24
vmmap
stack 24
r
stack 24
hexdump 0x7ffffffedb40
ni
ni
c
r
stack 24
ni
reg
ni
stack 24
r
stack
stck 24
stck 24
stack 24
r
stack 24
r
stack 24
context
stack 24
ni
reg
ni
r 
stack 24
ni
ni
r
stack 24
x/x 0x7ffffffedc40 
ni
ni
ni
stack 24
r
ni
r
ni
stack 24
ni
stack 24
ni
ni
stack 24
r
ni
ni
ni
ni
r
stack 24
ni
ni
r
ni
ni
r
stack
stack 24
ni
stack 24
r
stack 24
r
stack 24
r
stack 24
r
stack 24
r
stack
stack 24
r
si
stack 24
r
stack 24
r
stack 24
r
stack 2
stack 24
hexdump 0x7ffffffedb38
r 
ni
stack 24
ni
c
stack
r
stack 24
q
q
pdis rop
b *0x000000000040080b
c
start
c
stack 24
r
stack 24
start
pdis rop
b *0x000000000040080b
c
stack 24
r
stack 24
ni
b *0x400806
r
ni
stack 24
ni
c
stack 24
start
c
stack 24
r
stack 24
r
stack 24
start
ni
si
stack 24
si
ni
si
reg
r
stack 24
asmsearch "pop rdi; ret"
asmsearch "pop rdi; ret" libc
asmsearch "pop rsi; ret" libc
asmsearch "pop rdx; ret" libc
q
start
pdis rop
b *0x000000000040080b
c
stack 24
ni
reg
r
ni
ni
r
stack 24
r
stack 24
r
stack 24
ni
reg
ni
stack 24
ni
r
ni
p/d $rdx
r
ni
p/d $rdx
ni
p/d $rdx
c
r
stack 24
p open
asmsearch 'pop rdx; ret'
asmsearch 'pop rdx; ret' liibc
asmsearch 'pop rdx; ret' libc
p &buf
q
start
vmmap
q
start
vmmap
q
start
vmmap
string 0x00007fffff410000 
string *0x00007fffff410000 
find /bin.sh
find /bin/sh
q
start
pdis rop
b *0x000000000040080b
c
stack 24
q
start
b *0x000000000040080b
c
ni
q
b *0x000000000040080b
c
r
ni
q
b *0x000000000040080b
r
ni
q
start
q
start
pdis rop
b * 0x0000000000400806
r
stack 24
info proc mapping
asmsearch "pop rdi; ret"
asmsearch "pop rdi; ret" libc
asmsearch "pop rsi; ret" libc
asmsearch "pop rdx; ret" libc
q
q
pdis rop
b *0x0000000000400806
r
stack 24
r
stack 24
q
